template <typename T>
vector<Point<T>> convex_hull(vector<Point<T>> points) {
  if (points.size() <= 2) return points;

  sort(points.begin(), points.end());
  sort(points.begin() + 1, points.end(), [p = points.front()](auto& a, auto& b) {
    T value = p.ccw(a, b);

    if constexpr (is_floating_point_v<T>) {
      if (abs(value) > 1e-9) return value > 0;
    } else {
      if (value != 0) return value > 0;
    }
    return p.dist2(a) < p.dist2(b);
  });

  vector<Point<T>> hull;
  for (auto p : points) {
    if constexpr (is_floating_point_v<T>) {
      while (hull.size() >= 2 && end(hull)[-2].ccw(hull.back(), p) <= 1e-9) hull.pop_back();
    } else {
      while (hull.size() >= 2 && end(hull)[-2].ccw(hull.back(), p) <= 0) hull.pop_back();
    }
    hull.push_back(p);
  }

  return hull;
}