#include <climits>
#include <iostream>
#include <vector>
using namespace std;

vector<vector<long long>> floyd_warshall(auto& graph) {
  for (int k = 1; k < graph.size(); k++) {
    for (int i = 1; i < graph.size(); i++) {
      for (int j = 1; j < graph.size(); j++) {
        graph[i][j] = min(graph[i][j], graph[i][k] + graph[k][j]);
      }
    }
  }
  return graph;
}

int main() {
  int n;
  cin >> n;
  
  int m;
  cin >> m;
  
  vector<vector<long long>> graph(n + 1, vector<long long>(n + 1, INT_MAX));
  for (int i = 1; i <= n; i++) {
    graph[i][i] = 0;
  }
  
  while (m--) {
    int a, b, c;
    cin >> a >> b >> c;
    if (graph[a][b] > c) graph[a][b] = c;
  }
  
  vector<vector<long long>> result = floyd_warshall(graph);
  for (int i = 1; i <= n; i++) {
    for (int j = 1; j <= n; j++) {
      if (result[i][j] == INT_MAX) cout << "0 ";
      else cout << result[i][j] << " ";
    }
    cout << "\n";
  }
  
  return 0;
}