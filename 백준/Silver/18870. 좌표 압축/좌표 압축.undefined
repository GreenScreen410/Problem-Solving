#include <bits/stdc++.h>
using namespace std;

template <typename T>
void compress(vector<T>& v) {
  vector<T> sorted_unique = v;
  ranges::sort(sorted_unique);
  auto [first, last] = ranges::unique(sorted_unique);
  sorted_unique.erase(first, last);
  for (auto& i : v) i = ranges::lower_bound(sorted_unique, i) - sorted_unique.begin();
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);

  int N;
  cin >> N;

  vector<int> X(N);
  for (int& i : X) cin >> i;

  compress(X);

  for (int i : X) cout << i << " ";
  cout << "\n";

  return 0;
}